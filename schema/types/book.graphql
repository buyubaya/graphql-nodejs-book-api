type Book {
    _id: ID!,
    name: String!,
    img: String,
    price: Float,
    description: String,
    category: Category,
    author: Author,
    brand: Brand,
    relatedBook(page: Int, limit: Int): BookListResponse,
    createdAt: String,
    updatedAt: String,
}

type BookListResponse {
    list: [Book],
    count: Int,
    page: Int,
    limit: Int
}

union BookQueryResponse = BookListResponse | Book

type Query {
    book(
        id: ID, 
        page: Int, limit: Int, 
        category: String, author: String, brand: String, 
        sort: String, search: String
    ): BookQueryResponse
}


# ADD BOOK
input AddBook {
    name: String!,
    img: Upload,
    price: Float,
    description: String,
    category: ID!,
    author: ID,
    brand: ID
}

type BookResponse {
    status: Int,
    message: String,
    data: String
}

type Mutation {
    addBook(data: AddBook): BookResponse,
    editBook(data: AddBook): BookResponse
}